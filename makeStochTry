#Flags, Compilers, Linkers
#LINK = ifort
LINK = gfortran
#FC = ifort
FC = gfortran
SPAMADIR = ../sparseAMA
FFLAGS = -c -g -I$(SPAMADIR)/src/main/include -I../stackStochSims/
#CC = icc
CC = gcc
#CFLAGS = -c -g -I$(SPAMADIR)/src/main/include -I../stackStochSims/
LAPACKLIBS=  -L/opt/atlas/lib/ -lcblas  -latlas -llapack -lf77blas
SYSTEM= -DUNIX
FRBUSDIR=$(HOME)/aim/frbus
CFLAGS = -O4  -DUNIX -DCLOCK  -I$(SPAMADIR)/src/main/include -I../stackStochSims/
SPARSELIB =   ./ranlib.o



debCFLAGS = -g  -pg -DUNIX -DCLOCK  -I$(SPAMADIR)/src/main/include -I../stackStochSims/
CFLAGS=$(debCFLAGS)


fastCFLAGS =  -O4 -DUNIX -DCLOCK   -I$(SPAMADIR)/src/main/include -I../stackStochSims/
fastSPARSELIB = 	  ./ranlib.o

LINTFLAGS = -b -c  -h 
#LINKFLAGS =  -v  -lc -ldl -lm -L$(HOME)/aim/sparse -lsparseAim
LINKFLAGS =  -v  -lc -ldl -lm -L../sparseAMA/target/nar/sparseAMA-1.0-SNAPSHOT-amd64-Linux-g++-shared/lib/amd64-Linux-g++/shared -lsparseAMA-1.0-SNAPSHOT


#LAPACKLIB  = /mq/home/m1gsa00/aim/summer98/aimCCode/lapack_os5.a \
#		   /mq/home/m1gsa00/aim/summer98/aimCCode/blas_os5.a

#fastLAPACKLIB  = /mq/home/m1gsa00/lapack/LAPACK/lapack_os5.a \
#			   /mq/home/m1gsa00/lapack/LAPACK/blas_os5.a
fastLAPACKLIB  = $(LAPACKLIB)

WEBSOURCE =  stackC.w stochProto.w stochRun.w
CSOURCE   = $(WEBSOURCE:.w=.c)
TEXSOURCE   = $(WEBSOURCE:.w=.tex)
HTMLSOURCE   = $(WEBSOURCE:.hw=.tex)
atIFiles	= 

#OTHERSOURCE = /mq/home/m1gsa00/aim/frbus/miscLatexPkg.tex
#OTHERSOURCE = /msu/res2/m1gsa00/proj3/garyFiles/big/cFiles/nuwebTree/miscLatexPkg.tex
OTHERSOURCE = miscLatexPkg.tex
SOURCE = $(CSOURCE)  $(OTHERSOURCE)

OBJECT = $(SOURCE:.c=.o)
LINTFILE = $(CSOURCE:.c=.ln)

.SUFFIXES:	.tex .dvi .w .print .c .hw .html .ps .pdf

.hw.html:
	nuweb $*.hw
	latex2html -split 0 -no_reuse -no_navigation $*.tex

.w.hw:
	cp $*.w $*.hw

.w.tex:
	nuweb $(NUWEBFLAGS) $*
.dvi.ps:
	dvips -PDF -o $*.ps $*

.ps.pdf:
	distill $*.ps


.tex.dvi:
	latex $*
	bibtex $*
	nuweb  $(NUWEBFLAGS) $*
	latex $*
	latex $*


.w.dvi:
	nuweb  $(NUWEBFLAGS) $*
	latex $*
	bibtex $*
	nuweb  $(NUWEBFLAGS) $*
	latex $*
	latex $*

.w.c:
	nuweb -t $*

.w.o:
	make $*.c
	make $*.o

.c.o:
	$(CC) $(CFLAGS) -c $*.c

.f.o:
	$(FC) $(CFLAGS) -c $*.f

.dvi.print:
	$(PLPR) $*

# Dependency rules

stackC.w:	$(atIFiles) 
	touch stackC.w


lint:	$(LINTFILE)

printall:	

stochRun:	stochRun.o stackC.o  myNewt.o dtime.o\
			ma50ad.o stochProto.o juillard.o ranlib.o
		$(LINK) -o stochRun -g  stochRun.o myNewt.o dtime.o\
		stackC.o juillard.o ma50ad.o stochProto.o\
		$(fastSPARSELIB) $(LINKFLAGS) $(fastLAPACKLIB)


myNewt.c:			 stackC.w
		nuweb $(NUWEBFLAGS) -t stackC.w


debStackC.o:		stackC.c
		$(CC) $(debCFLAGS) -o debStackC.o -c stackC.c  
debMyNewt.o:		myNewt.c
		$(CC) $(debCFLAGS) -o debMyNewt.o -c myNewt.c  
debStochRun.o:		stochRun.c
		$(CC) $(debCFLAGS) -o debStochRun.o -c stochRun.c  
debStochProto.o:		stochProto.c
		$(CC) $(debCFLAGS) -o debStochProto.o -c stochProto.c  
debJuillard.o:		juillard.c
		$(CC) $(debCFLAGS) -o debJuillard.o -c juillard.c  
debStochRun:	debStochRun.o debStackC.o  debMyNewt.o dtime.o\
			ma50ad.o debStochProto.o debJuillard.o ranlib.o
		$(LINK) -o debStochRun  debStochRun.o debMyNewt.o dtime.o\
		debStackC.o debJuillard.o ma50ad.o debStochProto.o\
		$(fastSPARSELIB) $(LINKFLAGS) $(fastLAPACKLIB)



		


canadaRun:	canadaRun.o stackC.o  canada.o myNewt.o\
				 ma50ad.o  stochProto.o
		$(LINK)  -g -o canadaRun \
		canadaRun.o \
		myNewt.o stackC.o canada.o ma50ad.o stochProto.o\
		$(SPARSELIB)  $(LINKFLAGS) $(LAPACKLIB) 


